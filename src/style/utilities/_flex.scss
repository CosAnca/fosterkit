// ==========================================================================
// UTILITIES / FLEX
// ==========================================================================

// Utility classes for flexbox properties
// stylelint-disable declaration-no-important

// Align Items
// -------------------------------------------

$item-alignments: (stretch, start, center, end, baseline);

@mixin _build-flex-items-alignment($breakpoint: null) {
  @each $alignment in $item-alignments {
    .u-items-#{$alignment} {
      align-items: $alignment !important;
    }
  }
}

@include _build-flex-items-alignment;

@each $breakpoint, $value in $mq-breakpoints {
  @include mq($from: $breakpoint) {
    @include _build-flex-items-alignment(\@$breakpoint);
  }
}

// Align Self
// -------------------------------------------

$selft-alignments: (stretch, start, center, end, baseline);

@mixin _build-flex-self-alignment($breakpoint: null) {
  @each $self-alignment in $selft-alignments {
    .u-self-#{$self-alignment} {
      align-self: $self-alignment !important;
    }
  }
}

@include _build-flex-self-alignment;

@each $breakpoint, $value in $mq-breakpoints {
  @include mq($from: $breakpoint) {
    @include _build-flex-self-alignment(\@$breakpoint);
  }
}

// Justify Content
// -------------------------------------------

$justifications: (
  start,
  flex-start,
  center,
  end,
  flex-end,
  space-between,
  space-around
);

@mixin _build-flex-justify($breakpoint: null) {
  @each $justification in $justifications {
    .u-justify-#{$justification} {
      justify-content: $justification !important;
    }
  }
}

@include _build-flex-justify;

@each $breakpoint, $value in $mq-breakpoints {
  @include mq($from: $breakpoint) {
    @include _build-flex-justify(\@$breakpoint);
  }
}

// Misc
// -------------------------------------------

// Flex fill
// Use the `.flex-fill` class on a series of sibling elements to force them into
// widths equal to their content (or equal widths if their content does not
// surpass their border-boxes) while taking up all available horizontal space.

.u-flex-fill {
  flex: 1 1 auto !important;
}

@each $breakpoint, $value in $mq-breakpoints {
  .u-flex-fill\@#{$breakpoint} {
    @include mq($from: $breakpoint) {
      flex: 1 1 auto !important;
    }
  }
}

.u-flex-wrap {
  flex-wrap: wrap !important;
}

.u-flex-no-wrap {
  flex-wrap: nowrap !important;
}
