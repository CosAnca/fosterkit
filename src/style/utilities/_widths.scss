// =============================================================================
// UTILITIES / WIDTHS
// =============================================================================

// This fairly complex looking code will generate our entire project’s grid
// system classes in one go. You shouldn’t need to know the full ins-and-outs of
// what is going on below; all you really need to know is that we end up with a
// suite of classes like:
//
// .u-width-1/2         -- half width
// .u-width-3/4@medium  -- three quarters width on medium-and-up screens
// .u-push-2/3          -- Push an item over to the right by two thirds
// .u-pull-1/2@large    -- Pull an item back to the left by half

// stylelint-disable declaration-no-important
// prettier-ignore

@mixin _build-widths($breakpoint: null) {
  // Generate an auto width utility class at each of our breakpoints.
  .u-width-auto#{$breakpoint} {
    width: auto !important;
  }

  // Get the total number of columns defined on our $adaptable-grid object inside
  // _grid-settings file.
  $grid-columns: map-get($adaptable-grid, columns);

  // Initiate an empty map so we can push into it
  // our column widths from the loop below.
  $column-widths: ();

  // Loop through the number of columns in our grid
  @for $i from 1 through $grid-columns {
    // Loop through the number of potential nested columns in our grid
    @for $j from 1 through $i {
      $w: ($j / $i);

      @if not index($column-widths, $w) {
        // Build a class in the format `.u-width-1/3[@<breakpoint>]`.
        .u-width-#{$j}\/#{$i}#{$breakpoint} {
          @include grid-span($j of $i);
        }

        // Build a class in the format `.u-push-1/3[@<breakpoint>]`.
        .u-push-#{$j}\/#{$i}#{$breakpoint} {
          @include grid-push($j of $i);
        }

        // Build a class in the format `.u-pull-1/3[@<breakpoint>]`.
        .u-pull-#{$j}\/#{$i}#{$breakpoint} {
          @include grid-push(-$j of $i);
        }

        $column-widths: append($column-widths, $w, comma);
      }
    }
  }
}

// Generate our regular, non-responsive classes.
@include _build-widths;

// Generate our responsive classes by looping over the series of breakpoints
// held by $mq-breakpoints inside _breakpoint.scss file.
@each $breakpoint, $value in $mq-breakpoints {
  @include mq($from: $breakpoint) {
    @include _build-widths(\@#{$breakpoint});
  }
}
