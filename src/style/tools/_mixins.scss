// =============================================================================
// TOOLS / MIXINS
// =============================================================================

// @include focus-styles()
// ==============================================

// Generates a consistent outline shadow for use on `:focus` or `.has-focus`.
@mixin focus-styles($color: default, $width: 1px) {
  @if ($color == "default") {
    outline: $width dashed color("brand-orange");
    outline-offset: -$width;
  } @else if ($color == "invert") {
    outline: $width dashed color("brand-navy");
    outline-offset: -$width;
  } @else {
    @warn "`#{$color}` is not a valid outline color, it must be `default` or `invert`.";
  }
}

// Making accessible hover/focus states simpler
// ===========================================

// Generate `:hover` and `:focus` styles in one go.
// http://www.456bereastreet.com/archive/201004/whenever_you_use_hover_also_use_focus/
@mixin hocus {
  &:hover,
  &:focus {
    @content;
  }
}

// Removing elements from view and/or ATs
// ===========================================

// Visually hide content, leaving it accessible to screenreaders and ATs.
// http://snook.ca/archives/html_and_css/hiding-content-for-accessibility

// stylelint-disable declaration-no-important

@mixin hide-visually {
  // Hiding elements visually overrides any matching property declarations
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  margin: -1px !important;
  padding: 0 !important;
  overflow: hidden !important;
  clip: rect(0 0 0 0) !important;
  border: 0 !important;
  white-space: nowrap !important;
}

// Completely hide content both visually from the screen, and from screenreaders
// and ATs.
@mixin hide-completely {
  // Hiding elements completely overrides any matching property declarations
  display: none !important;
}

// stylelint-enable declaration-no-important

// Font smoothing
// ==============

// Controls the application of anti-aliasing when fonts are rendered on mac OS.

@mixin font-smoothing($value: antialiased) {
  @if $value == antialiased {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  } @else {
    -webkit-font-smoothing: subpixel-antialiased;
    -moz-osx-font-smoothing: auto;
  }
}

// Centerer
@mixin centerer($horizontal: true, $vertical: true) {
  position: absolute;

  @if $horizontal and $vertical {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  } @else if $horizontal {
    left: 50%;
    transform: translateX(-50%);
  } @else if $vertical {
    top: 50%;
    transform: translateY(-50%);
  }
}

// Overlay
@mixin overlay($color) {
  &::before {
    @include position(absolute, 0 0 0 0);
    content: "";
    background-color: $color;
  }
}
