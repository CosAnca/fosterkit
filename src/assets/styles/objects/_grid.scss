// =============================================================================
// OBJECTS / GRID
// =============================================================================

// The Grid object provides us with a column-style layout system. This file
// contains the basic structural elements, but classes should be complemented
// with grid item modifier classes, for example:
//
// <div class="o-grid">
//   <div class="o-grid__col o-grid__col--6">...</div>
//   <div class="o-grid__col o-grid__col--6">...</div>
// </div>
//
// Our grid object also consumes the gutters of its container to allow easier
// grid nesting.
//
// Grid object creates a flexbox grid container using Adaptable grid-nest mixin.
//
// @include grid-nest;
//
// Output
// .element {
//   display: flex;
//   flex-wrap: wrap;
//   margin-left: -1.5rem; // $grid-gutter
//   margin-right: -1.5rem; // $grid-gutter
//   flex: 0 0 calc(100% + 3rem);
//   max-width: calc(100% + 3rem);
// }

.o-grid {
  @include grid-nest;
}

// Grid item creates the basics for the grid column layout
//
// @include grid-column(12, $adaptable-grid);
//
// Output
// .element {
//    flex-grow: 0;
//    flex-shrink: 0;
//    flex-basis: calc(100% - 3rem);
//    max-width: calc(100% - 3rem);
//    margin-left: 1.5rem;
// }

.o-grid__col {
  @include grid-column;
}

//
// Tools (Private) - Build grid items modifier classes
// ==========================================================================
//
// This code will generate our entire project’s grid system classes in one go.
// You shouldn’t need to know the full ins-and-outs of what is going on below;
// all you really need to know is that we end up with a suite of classes like:
//
// .o-grid__col--6 -- spans for 6 columns or half width
// .o-grid__col--9@md -- spans for 9 columns or three quarters
//                       on medium-and-up screens
// .o-grid__col--push-8 -- push an item over to the right by 8 cols
//                         or two thirds
// .o-grid__col--pull-3@lg -- pull an item back to the left by half

@mixin _build-grid-system($breakpoint: null) {
  // Get the total number of columns defined on our $adaptable-grid object inside
  // _grid-settings file.
  $grid-columns: map-get($adaptable-grid, columns);

  // Initiate an empty map so we can push into it
  // our column widths from the loop below.
  $column-widths: ();

  // Loop through the number of columns in our grid
  @for $i from 1 through $grid-columns {
    // Build a class in the format `.o-grid__col--6[@<breakpoint>]`.
    .o-grid__col--#{$i}#{$breakpoint} {
      @include grid-span($i of $grid-columns);
    }

    // Build a class in the format `.o-grid__col--push-2[@<breakpoint>]`.
    .o-grid__col--push-#{$i}#{$breakpoint} {
      @include grid-push($i of $grid-columns);
    }

    // Build a class in the format `.o-grid__col--pull-2[@<breakpoint>]`.
    .o-grid__col--pull-#{$i}#{$breakpoint} {
      @include grid-push(-$i of $grid-columns);
    }
  }
}

// Generate our regular, non-responsive classes.
@include _build-grid-system;

// Generate our responsive classes by looping over the series of breakpoints
// held by $mq-breakpoints inside _breakpoint.scss file.
@each $breakpoint, $value in $mq-breakpoints {
  @include mq($from: $breakpoint) {
    @include _build-grid-system(\@#{$breakpoint});
  }
}
