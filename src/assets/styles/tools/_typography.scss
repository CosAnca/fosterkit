// =============================================================================
// TOOLS / TYPOGRAPHY
// =============================================================================

// Functions
// ==============================================

// font-family()
// ------------------------------------

// Function to get font-family from `$global-font-families` instead of using `map-get`.
@function font-family($key) {
  @return map-get-deep($global-font-families, $key);
}

// font-size()
// ------------------------------------

// Function to get font-size from `$font-size` instead of using `map-get`.
// Returns the font size value in `rem`.
@function font-size($key) {
  $value: map-get($font-size, $key);
  @return convert-to-rem($value);
}

// font-weight()
// ------------------------------------

// Function to get font-weight from `$font-weight` instead of using `map-get`.
@function font-weight($key) {
  @return map-get($font-weight, $key);
}

// line-height()
// ------------------------------------

// Function to get line-height from `$line-height` instead of using `map-get`.
@function line-height($key) {
  @return map-get($line-height, $key);
}

// Mixins
// ==============================================

// @include font-smoothing
// ------------------------------------

// Controls the application of anti-aliasing when fonts are rendered on macOS.

@mixin font-smoothing($value: antialiased) {
  @if $value == antialiased {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  } @else {
    -webkit-font-smoothing: subpixel-antialiased;
    -moz-osx-font-smoothing: auto;
  }
}

// font-size()
// ------------------------------------

// Mixin to return a font-size from the `$font-size` map.
// Returns a rem-based font-size.
@mixin font-size($key) {
  font-size: font-size($key);
}

// font-weight()
// ------------------------------------

// Mixin to return a font-weight from the `$font-weight` map.
@mixin font-weight($key) {
  font-weight: font-weight($key);
}

// line-height()
// ------------------------------------

// Mixin to return a line-height from the `$line-height` map.
@mixin line-height($key) {
  line-height: line-height($key);
}

// @include text()
// ------------------------------------

// Create a fully formed type style (sizing and vertical rhythm) by passing in a
// single value, e.g:
//
// .foo {
//     @include text(body);
// }
//
// This will generate a rem-based font-size and line-height, e.g:
//
// .foo {
//     font-size: 1rem;
//     line-height: 1.5;
// }
//

@mixin text($key, $variant: small, $override-line-height: false) {
  $font-size: map-get-deep($text, $key, $variant, font-size);
  font-size: convert-to-rem($font-size);

  @if ($override-line-height) {
    line-height: $override-line-height;
  } @else {
    line-height: map-get-deep($text, $key, $variant, line-height);
  }
}
